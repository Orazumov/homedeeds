#1. Поработайте с переменными, создайте несколько, выведите на экран, запросите у пользователя несколько чисел и строк и сохраните в переменные, выведите на экран.

var_float = 1.75
var_string = 'строка'
var_int = 5
var_bool = True

print(f'Примеры разных переменных: {var_float}, {type(var_float)} {var_string}, {type(var_string)} {var_int}, {type(var_int)}, {var_bool}, {type(var_bool)}')

var_string_2 = input('Введите любой текст: ')
print('Вы ввели: ', var_string_2)

var_int_2 = float(input('Введите любое число: '))
print('Вы ввели: ', var_int_2)

#2. Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды и выведите в формате чч:мм:сс. Используйте форматирование строк.

time_sec_ent = float(input('Введите время в секундах: '))

time_hour = int(time_sec_ent//3600)
time_min = int((time_sec_ent / 3600 - time_sec_ent//3600)*60)
time_sec = round((((time_sec_ent / 3600 - time_sec_ent//3600)*60) - int((time_sec_ent / 3600 - time_sec_ent//3600)*60))*60)

print(f'{time_hour}:{time_min}:{time_sec}')

#3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.

number_n = input('Введите целое число n: ')

second_num = number_n + number_n
third_num = number_n + number_n + number_n

summ_n = int(number_n) + int(second_num) + int(third_num)

print('n + nn + nnn: ', summ_n)

#4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе. Для решения используйте цикл while и арифметические операции.

number_inp = input('Введите целое положительное число: ')

number_of_digits = len(number_inp)
max_number = 0
i = 1
while i <= number_of_digits:
    current_number = number_inp[i-1]
    if int(current_number) > max_number:
        max_number = int(current_number)
    i += 1

print('Максимальная цифра в числе', max_number)

#5. Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким финансовым результатом работает фирма (прибыль — выручка больше издержек, или убыток —
# издержки больше выручки). Выведите соответствующее сообщение. Если фирма отработала с прибылью, вычислите рентабельность выручки (соотношение прибыли к выручке).
#Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчете на одного сотрудника.

benefit = int(input('Введите значение выручки фирмы: '))
loose = int(input('Введите значение издержек фирмы: '))

if benefit > loose:
    print('Фирма работает с выручкой: ', (benefit - loose))
    print('Рентабельность: ', benefit/loose)
elif benefit == loose:
    print('Прибыть равна выручке')
else:
    print('Фирма работает с убытком: ', loose - benefit)

people = int(input('Введите численность сотрудников фирмы: '))

print('Прибыль фирмы в расчете на сотрудника: ', benefit/people)

#6. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров. Каждый день спортсмен
# увеличивал результат на 10 % относительно предыдущего. Требуется определить номер дня, на который общий результат
# спортсмена составить не менее b километров. Программа должна принимать значения параметров a и b и выводить одно
# натуральное число — номер дня.
#Например: a = 2, b = 3.
#Результат:
#1-й день: 2
#2-й день: 2,2
#3-й день: 2,42
#4-й день: 2,66
#5-й день: 2,93
#6-й день: 3,22

#Ответ: на 6-й день спортсмен достиг результата — не менее 3 км.

a_km = int(input('Сколько спортсмен пробежал в первый день: '))
b_km = int(input('Сколько километров спортсмен должен пробежать в итоге: '))
day_number = 1
i = a_km
while i < b_km:
    if i == a_km:
        print(f'{day_number}й день: {round(i, 2)}')
    i = i + (i*0.1)
    day_number += 1
    print(f'{day_number}й день: {round(i, 2)}')

print(f'Ответ, на {day_number}й день спортсмен достиг результата - не менее {b_km} км.')