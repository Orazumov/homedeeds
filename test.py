# названия переменных - доступен CamelCase, snake_case, но не cebab-case
# переменные не транслитом и должны начинаться не с числа.

var_1 = 123
var_2 = 'Hello, world!'

print(var_2)

# INT - целое число

var_int_1 = 22
var_int_2 = 33

print (var_int_1, var_int_2)

# задача - поменять местами 2 переменные.
# переменная не может начинаться с числа

var_int_3 = var_int_1
var_int_1 = var_int_2
var_int_1 = var_int_3

# поменяли местами, этот блок - это процедура.

var_int_1 = var_int_1 + var_int_2

# + - оператор, символ действия.
# переменные - это операнды, над которыми мы производим действия

var_int_2 = var_int_1 - var_int_2
var_int_1 = var_int_1 - var_int_2

print(var_int_1, var_int_2)

print('#' * 30) # 30 раз печатаем решетку.

# инт - целочисленный тип данных.
# float - число с дробной частью, плавающей запятой.
var_float_1 = 22.45
# Через "," пишутся перечисления, поэтому тут через "."

var_str_1 = 'Это будет строка с данными'
var_str_2 = "Это тоже строка с данными"
# строка - str - текстовая информация. Пишется через ' и через "
var_str_3 = '''Это будет строка
с переносом данных
на разные строки'''
# используется если есть перенос на разные строки.
# она так и печатается, с переносами

var_str_4 = 'Это будет строка с данными' \
            'Тут вроде как перенос'
# реально переноса нет.

# \n - задается перенос в опред месте строки.

#var_int_1 // var_int_2 # деление без остатка
#13%5 # остаток от деления
# не,в арифметике остаток это сколько единиц после того как вытащили столько то раз число, на которое делим

# проверяем тип данных

print(type(var_int_1))

# ф. type возвращает тип данных

#13 * 2 # умножение
#13 ** 2 # возводим в степень

str1='строка'
str2='текст'
print(str1 + str2) # слепит строчки без пробелов

print(str1 + var_int_1) # ошибка, нельзя конкатенировать строку и число

# можно преобразовать в строку str(var_int_1) и потом сложить.

print(12 > 11) # вернется True - булевое значение (type - bool): оно м.б. True или False.

# <  >  >=  == <=  !=

# Ввод данных:

request = 'Ваше имя? \n'
response = input(request)
print(type(response))
print(f'Привет{response}')

# Класс str - всегда ее возвращает input

request = 'Ваше имя? \n'
response = input(request)
print('name', type(response))
print(f'Привет{response}')
q_age = 'Сколько вам лет?\n'
age = input(q_age)
print(type(age))

# класс все равно строка

# Ветвление.

if int(age) > 18:
    print('Вам доступен раздел ХХХ')
elif int(age) >= 12:
    print('Будем смотреть мультики')
else:
    print('Доступ запрещен')

# отступы очень важны!
# ставим 4 проблема или табуляция, если вперемешку - не будет работать.
# правильнее ставить пробелы.
# после оператора if идет условие, которое возвращает будевое значение.
# если True, то будет выполнен код после if, остальное - пропещено и т.д.

# можно сделать внутреннее ветвление:

if int(age) > 18:
    print('Вам доступен раздел ХХХ')
    if int(age) > 30:
        print('А сердце выдержит? :)')
elif int(age) >= 12:
    print('Будем смотреть мультики')
else:
    print('Доступ запрещен')

# 0 всегда выдает False, любое число - всегда True

tmp = 0
if tmp:
    print(1)

# не выполнится

tmp = 1
if tmp:
    print(1)

# напечатается 1

tmp = ''
if tmp:
    print(1)

# не напечатается

tmp = 0
if not tmp:
    print(1)

# напечатается единица.

# 2 вида циклов: for и while

num = 10
while num >= 0:
    print(num)
    num -= 1
# вычитаем единицу в каждом цикле и до тех пор пока num >= 0

while True:
    print(num)
# опасно, бесконечный цикл!

while True:
    print(num)
    num -= 1
    if num == -15:
        break

# завершаем цикл после -15.

while True:
    if not num % 2:
        print(num)
    num -= 1
    if num == -15:
        break
# печатаются только четные

# или же:

while True:
    if num % 2:
        num -= 1
        continue  # на следующий шаг цикла, остальное пропустить.
    print(num)
    num -= 1
    if num == -15:
        break

num = 20
while True:
    if num == 13 or num == 14:  #печатаем все числа кроме 13 и 14
        num -= 1
        continue  #на следующий шаг цикла, остальное пропустить.
    print(num)
    num -= 1
    if num == -15:
        break

# форматирование строк:

var1 = 'строка'
var2 = 'строчечка'

print(f'мы склеим 2 строки {var1} {var2}')

print('мы склеим 2 строки {} {}'.format(var1, var2)) # в той последовательности, в которой стоят ковычки, в той и передаем.

print(f'мы склеим 2 строки {var1} {var2:>15}')  #выравнивание по правому краю, но вся строка 15 символов

print(f'мы склеим 2 строки {22+5} {var2:>15}')  #можно считать

# ДЗ из методички.




